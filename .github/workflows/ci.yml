name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      id: install_deps # Give this step an ID
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pre-commit
      # Continue on error to allow the comment step to report installation failures
      continue-on-error: true 

    - name: Run pre-commit checks
      id: precommit # Give this step an ID
      if: steps.install_deps.outcome == 'success' # Only run if deps installed successfully
      run: |
        pre-commit run --all-files
      continue-on-error: true # Allow workflow to continue to report pre-commit failures

    - name: Run tests
      id: tests # Give this step an ID
      if: steps.install_deps.outcome == 'success' # Only run if deps installed successfully
      run: |
        python -m unittest discover -s tests
      continue-on-error: true # Allow workflow to continue to report test failures

    - name: Post PR Comment
      # This step will always run, even if previous steps fail (due to continue-on-error)
      # It only runs for pull_request events
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      env:
        PR_NUMBER: ${{ github.event.number }}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const prNumber = process.env.PR_NUMBER;
          if (!prNumber) {
            console.log('Could not get PR number from environment variable (PR_NUMBER), skipping comment.');
            return;
          }

          const jobStatus = '${{ job.status }}'; // 'success', 'failure', 'cancelled'
          const installDepsStatus = '${{ steps.install_deps.outcome }}';
          const precommitStatus = '${{ steps.precommit.outcome }}';
          const testsStatus = '${{ steps.tests.outcome }}';
          
          let commentBody = `**CI Checks Summary for PR #${prNumber}**\n\n`;
          commentBody += `- Dependency Installation: ${installDepsStatus === 'success' ? '‚úÖ Succeeded' : (installDepsStatus === 'failure' ? '‚ùå Failed' : '‚ö™ Skipped/Unknown')}\n`;
          
          if (installDepsStatus === 'success') {
            commentBody += `- Pre-commit Checks: ${precommitStatus === 'success' ? '‚úÖ Passed' : (precommitStatus === 'failure' ? '‚ùå Failed' : '‚ö™ Skipped/Unknown')}\n`;
            commentBody += `- Unit Tests: ${testsStatus === 'success' ? '‚úÖ Passed' : (testsStatus === 'failure' ? '‚ùå Failed' : '‚ö™ Skipped/Unknown')}\n`;
          } else {
            commentBody += `- Pre-commit Checks: ‚ö™ Skipped (due to dependency failure)\n`;
            commentBody += `- Unit Tests: ‚ö™ Skipped (due to dependency failure)\n`;
          }

          commentBody += '\nOverall Job Status: ';
          if (jobStatus === 'success') {
            commentBody += 'üéâ **All checks passed!**';
          } else if (jobStatus === 'failure') {
            commentBody += 'üíî **Some checks failed.** Please review the logs for details.';
          } else {
            commentBody += `‚ö™ ${jobStatus}`;
          }

          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: commentBody
          });
